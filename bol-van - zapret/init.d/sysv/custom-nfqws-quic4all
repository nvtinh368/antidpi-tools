# this custom script in addition to MODE=nfqws runs desync to all QUIC initial packets, without ipset/hostlist filtering
# need to add to config : NFQWS_OPT_DESYNC_QUIC="--dpi-desync=fake"
# russian TSPU version  : NFQWS_OPT_DESYNC_QUIC="--dpi-desync=fake --dpi-desync-fake-quic=/opt/zapret/files/fake/quic_short_header.bin"
# NOTE : do not use TTL fooling. chromium QUIC engine breaks sessions if TTL expired in transit received

QNUM2=$(($QNUM+10))

zapret_custom_daemons()
{
	# $1 - 1 - run, 0 - stop

	local MODE_OVERRIDE=nfqws
	local opt

	zapret_do_daemons $1

	opt="--qnum=$QNUM2 $NFQWS_OPT_BASE $NFQWS_OPT_DESYNC_QUIC"
	do_nfqws $1 100 "$opt"
}
zapret_custom_firewall()
{
	# $1 - 1 - run, 0 - stop

	local MODE_OVERRIDE=nfqws
        local f
        local first_packets_only="-m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:3"
        local desync="-m mark ! --mark $DESYNC_MARK/$DESYNC_MARK"

        zapret_do_firewall_rules_ipt $1

        f="-p udp --dport 443"
        fw_nfqws_post $1 "$f $desync $first_packets_only" "$f $desync $first_packets_only" $QNUM2

        # fix NDM kernel masquerade for nfqws
        ipta_add_del $1 _NDM_MASQ -t nat -o eth0 -j MASQUERADE

}
zapret_custom_firewall_nft()
{
	# stop logic is not required

	local MODE_OVERRIDE=nfqws
	local f
	local first_packets_only="ct original packets 1-3"
	local desync="mark and $DESYNC_MARK == 0"

	zapret_apply_firewall_rules_nft

	f="udp dport {$QUIC_PORTS}"
	nft_fw_nfqws_post "$f $desync $first_packets_only" "$f $desync $first_packets_only" $QNUM2
}
